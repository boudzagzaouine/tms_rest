package com.bagile.gmo.entities;

// Generated 8 mars 2015 01:55:29 by Hibernate Tools 4.3.1


import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.HashSet;
import java.util.Set;

/**
 * UsrUserGroup generated by hbm2java
 */
@Entity
@Table(name = "usr_usergroup", uniqueConstraints = {
        @UniqueConstraint(columnNames = "usr_usergroupcode")})
public class UsrUserGroup extends EmsEntity implements java.io.Serializable {

    private static final long serialVersionUID = 4316246777960907747L;

    private long usrUserGroupId;
    @Size(max = 30)
    @NotNull
    private String usrUserGroupCode;
    @Size(max = 255)
    private String usrUserGroupDescription;
    private Long userUserGroupType;
    private Set<UsrUser> usrUsers = new HashSet<UsrUser>(0);

    private Set<UsrGroupHabilitation> usrGroupHabilitations = new HashSet<UsrGroupHabilitation>(
            0);
    private Set<UsrUserGroupOwner> usrUserGroupOwnOwners = new HashSet<>(
            0);
    private Set<UsrUserGroupWarehouse> usrUserGroupWrhWarehouses = new HashSet<>(0);

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq")
    @SequenceGenerator(name = "seq", sequenceName = "seq_usr_user_group_id", allocationSize = 1)
    @Column(name = "usr_usergroupid", unique = true, nullable = false, precision = 10, scale = 0)
    public long getUsrUserGroupId() {
        return this.usrUserGroupId;
    }

    public void setUsrUserGroupId(long usrUserGroupId) {
        this.usrUserGroupId = usrUserGroupId;
    }

    @Column(name = "usr_usergroupcode", unique = true, nullable = false, length = 30)
    public String getUsrUserGroupCode() {
        return this.usrUserGroupCode;
    }

    public void setUsrUserGroupCode(String usrUserGroupCode) {
        this.usrUserGroupCode = usrUserGroupCode;
    }

    @Column(name = "usr_usergroupdescription")
    public String getUsrUserGroupDescription() {
        return this.usrUserGroupDescription;
    }

    public void setUsrUserGroupDescription(String usrUserGroupDescription) {
        this.usrUserGroupDescription = usrUserGroupDescription;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "usrUserGroup")
    public Set<UsrUser> getUsrUsers() {
        return this.usrUsers;
    }

    public void setUsrUsers(Set<UsrUser> usrUsers) {
        this.usrUsers = usrUsers;
    }

    @OneToMany(mappedBy = "usrUserGroup", fetch = FetchType.EAGER)
    public Set<UsrGroupHabilitation> getUsrGroupHabilitations() {
        return this.usrGroupHabilitations;
    }


    public void setUsrGroupHabilitations(
            Set<UsrGroupHabilitation> usrGroupHabilitations) {
        this.usrGroupHabilitations = usrGroupHabilitations;
    }

    @OneToMany(mappedBy = "usrUserGroup", fetch = FetchType.LAZY)
    public Set<UsrUserGroupOwner> getUsrUserGroupOwnOwners() {
        return usrUserGroupOwnOwners;
    }

    public void setUsrUserGroupOwnOwners(Set<UsrUserGroupOwner> usrUserGroupOwnOwners) {
        this.usrUserGroupOwnOwners = usrUserGroupOwnOwners;
    }

    @OneToMany(mappedBy = "usrUserGroup", fetch = FetchType.LAZY)
    public Set<UsrUserGroupWarehouse> getUsrUserGroupWrhWarehouses() {
        return usrUserGroupWrhWarehouses;
    }

    public void setUsrUserGroupWrhWarehouses(Set<UsrUserGroupWarehouse> usrUserGroupWrhWarehouses) {
        this.usrUserGroupWrhWarehouses = usrUserGroupWrhWarehouses;
    }
    @Column(name = "usr_usergrouptype")

    public Long getUserUserGroupType() {
        return userUserGroupType;
    }

    public void setUserUserGroupType(Long userUserGroupType) {
        this.userUserGroupType = userUserGroupType;
    }
}
