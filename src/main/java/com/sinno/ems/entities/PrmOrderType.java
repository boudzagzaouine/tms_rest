package com.sinno.ems.entities;

// Generated 8 mars 2015 01:55:29 by Hibernate Tools 4.3.1

import org.springframework.format.annotation.DateTimeFormat;

import javax.persistence.*;
import javax.validation.constraints.Size;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * PrmOrderType generated by hbm2java
 */
@Entity
@Table(name = "prm_ordertype", uniqueConstraints = @UniqueConstraint(columnNames = "prm_ordertypecode"))
public class PrmOrderType implements java.io.Serializable {

    private long prmOrderTypeId;
    @Size(max = 30)
    private String prmOrderTypeCode;
    @Size(max = 255)
    private String prmOrderTypeDescription;
    @DateTimeFormat(pattern = "yyyy-MM-dd")
    private Date prmOrderTypeCreationDate;

    @DateTimeFormat(pattern = "yyyy-MM-dd")
    private Date prmOrderTypeUpdateDate;

    private Long prmOrderTypeFlow;

    private Boolean prmOrderTypeActive;
    private OrgOrganisation orgOrganisation ;

    private Set<RcpPurshaseOrderArc> rcpPurshaseOrderArcs = new HashSet<RcpPurshaseOrderArc>(
            0);
    private Set<RcpReceptionArc> rcpReceptionArcs = new HashSet<RcpReceptionArc>(
            0);
    private Set<RcpPurshaseOrder> rcpPurshaseOrders = new HashSet<RcpPurshaseOrder>(
            0);
    private Set<CmdSaleOrder> cmdSaleOrders = new HashSet<CmdSaleOrder>(0);
    private Set<RcpReception> rcpReceptions = new HashSet<RcpReception>(0);
    private Set<CmdSaleOrderArc> cmdSaleOrderArcs = new HashSet<CmdSaleOrderArc>(
            0);

    public PrmOrderType() {
    }

    public PrmOrderType(long prmOrderTypeId, String prmOrderTypeCode) {
        this.prmOrderTypeId = prmOrderTypeId;
        this.prmOrderTypeCode = prmOrderTypeCode;
    }

    public PrmOrderType(long prmOrderTypeId, String prmOrderTypeCode,
                        String prmOrderTypeDescription, Date prmOrderTypeCreationDate,
                        Date prmOrderTypeUpdateDate,
                        Set<RcpPurshaseOrderArc> rcpPurshaseOrderArcs,
                        Set<RcpReceptionArc> rcpReceptionArcs,
                        Set<RcpPurshaseOrder> rcpPurshaseOrders,
                        Set<CmdSaleOrder> cmdSaleOrders, Set<RcpReception> rcpReceptions,
                        Set<CmdSaleOrderArc> cmdSaleOrderArcs) {
        this.prmOrderTypeId = prmOrderTypeId;
        this.prmOrderTypeCode = prmOrderTypeCode;
        this.prmOrderTypeDescription = prmOrderTypeDescription;
        this.prmOrderTypeCreationDate = prmOrderTypeCreationDate;
        this.prmOrderTypeUpdateDate = prmOrderTypeUpdateDate;
        this.rcpPurshaseOrderArcs = rcpPurshaseOrderArcs;
        this.rcpReceptionArcs = rcpReceptionArcs;
        this.rcpPurshaseOrders = rcpPurshaseOrders;
        this.cmdSaleOrders = cmdSaleOrders;
        this.rcpReceptions = rcpReceptions;
        this.cmdSaleOrderArcs = cmdSaleOrderArcs;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq")
    @SequenceGenerator(name = "seq", sequenceName = "seq_prm_ordertype", allocationSize = 1)
    @Column(name = "prm_ordertypeid", unique = true, nullable = false, precision = 10, scale = 0)
    public long getPrmOrderTypeId() {
        return this.prmOrderTypeId;
    }

    public void setPrmOrderTypeId(long prmOrderTypeId) {
        this.prmOrderTypeId = prmOrderTypeId;
    }

    @Column(name = "prm_ordertypecode", unique = true, nullable = false, length = 30)
    public String getPrmOrderTypeCode() {
        return this.prmOrderTypeCode;
    }

    public void setPrmOrderTypeCode(String prmOrderTypeCode) {
        this.prmOrderTypeCode = prmOrderTypeCode;
    }

    @Column(name = "prm_ordertypedescription")
    public String getPrmOrderTypeDescription() {
        return this.prmOrderTypeDescription;
    }

    public void setPrmOrderTypeDescription(String prmOrderTypeDescription) {
        this.prmOrderTypeDescription = prmOrderTypeDescription;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "prm_ordertypecreationdate")
    public Date getPrmOrderTypeCreationDate() {
        return this.prmOrderTypeCreationDate;
    }

    public void setPrmOrderTypeCreationDate(Date prmOrderTypeCreationDate) {
        this.prmOrderTypeCreationDate = prmOrderTypeCreationDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "prm_ordertypeupdatedate")
    public Date getPrmOrderTypeUpdateDate() {
        return this.prmOrderTypeUpdateDate;
    }

    public void setPrmOrderTypeUpdateDate(Date prmOrderTypeUpdateDate) {
        this.prmOrderTypeUpdateDate = prmOrderTypeUpdateDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "prmOrderType")
    public Set<RcpPurshaseOrderArc> getRcpPurshaseOrderArcs() {
        return this.rcpPurshaseOrderArcs;
    }

    public void setRcpPurshaseOrderArcs(
            Set<RcpPurshaseOrderArc> rcpPurshaseOrderArcs) {
        this.rcpPurshaseOrderArcs = rcpPurshaseOrderArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "prmOrderType")
    public Set<RcpReceptionArc> getRcpReceptionArcs() {
        return this.rcpReceptionArcs;
    }

    public void setRcpReceptionArcs(Set<RcpReceptionArc> rcpReceptionArcs) {
        this.rcpReceptionArcs = rcpReceptionArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "prmOrderType")
    public Set<RcpPurshaseOrder> getRcpPurshaseOrders() {
        return this.rcpPurshaseOrders;
    }

    public void setRcpPurshaseOrders(Set<RcpPurshaseOrder> rcpPurshaseOrders) {
        this.rcpPurshaseOrders = rcpPurshaseOrders;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "prmOrderType")
    public Set<CmdSaleOrder> getCmdSaleOrders() {
        return this.cmdSaleOrders;
    }

    public void setCmdSaleOrders(Set<CmdSaleOrder> cmdSaleOrders) {
        this.cmdSaleOrders = cmdSaleOrders;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "prmOrderType")
    public Set<RcpReception> getRcpReceptions() {
        return this.rcpReceptions;
    }

    public void setRcpReceptions(Set<RcpReception> rcpReceptions) {
        this.rcpReceptions = rcpReceptions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "prmOrderType")
    public Set<CmdSaleOrderArc> getCmdSaleOrderArcs() {
        return this.cmdSaleOrderArcs;
    }

    public void setCmdSaleOrderArcs(Set<CmdSaleOrderArc> cmdSaleOrderArcs) {
        this.cmdSaleOrderArcs = cmdSaleOrderArcs;
    }

    @Column(name = "prm_ordertypeflow", precision = 2, scale = 0)
    public Long getPrmOrderTypeFlow() {
        return prmOrderTypeFlow;
    }

    public void setPrmOrderTypeFlow(Long prmOrderTypeFlow) {
        this.prmOrderTypeFlow = prmOrderTypeFlow;
    }

    @Column(name = "prm_ordertypeactive")
    public Boolean getPrmOrderTypeActive() {
        return prmOrderTypeActive;
    }

    public void setPrmOrderTypeActive(Boolean prmOrderTypeActive) {
        this.prmOrderTypeActive = prmOrderTypeActive;
    }
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "prm_ordertypeorganisationid")
    public OrgOrganisation getOrgOrganisation() {
        return orgOrganisation;
    }

    public void setOrgOrganisation(OrgOrganisation orgOrganisation) {
        this.orgOrganisation = orgOrganisation;
    }
}
