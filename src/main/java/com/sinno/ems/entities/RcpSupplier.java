package com.sinno.ems.entities;

// Generated 8 mars 2015 01:55:29 by Hibernate Tools 4.3.1

import org.springframework.format.annotation.DateTimeFormat;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * RcpSupplier generated by hbm2java
 */
@Entity
@Table(name = "rcp_supplier")
public class RcpSupplier implements java.io.Serializable {

    private long rcpSupplierId;
    @NotNull
    private OwnOwner ownOwner;
    private PrmContact prmContact;
    private TrpTransport trpTransport;
    //TODO
    private AdrAddress adrAddress;
    @Size(max = 30)
    @NotNull
    private String rcpSupplierCode;
    @Size(max = 255)
    private String rcpSupplierDescription;
    @Size(max = 255)
    private String rcpSupplierComment;
    @Size(max = 255)
    private String rcpSupplierTerms;

    @DateTimeFormat(pattern = "yyyy-MM-dd")
    private Date rcpSupplierCreationDate;
    @DateTimeFormat(pattern = "yyyy-MM-dd")
    private Date rcpSupplierUpdateDate;

    @NotNull
    private Boolean rcpSupplierIsActive;

    @Size(max = 255)
    private String rcpSupplierVariable1;
    @Size(max = 255)
    private String rcpSupplierVariable2;
    @Size(max = 255)
    private String rcpSupplierVariable3;
    @Size(max = 255)
    private String rcpSupplierVariable4;
    @Size(max = 255)
    private String rcpSupplierVariable5;
    @Size(max = 255)
    private String rcpSupplierVariable6;
    @Size(max = 255)
    private String rcpSupplierVariable7;
    @Size(max = 255)
    private String rcpSupplierVariable8;
    @Size(max = 255)
    private String rcpSupplierVariable9;
    @Size(max = 255)
    private String rcpSupplierVariable10;
    private InvInvoiceTerm invInvoiceTerm;
    private Set<StkStock> stkStocks = new HashSet<StkStock>(0);
    private Set<RcpReceptionStockArc> rcpReceptionStockArcs = new HashSet<RcpReceptionStockArc>(
            0);
    private Set<RcpReceptionStock> rcpReceptionStocks = new HashSet<RcpReceptionStock>(
            0);
    private Set<RcpReceptionArc> rcpReceptionArcs = new HashSet<RcpReceptionArc>(
            0);
    private Set<CmdSaleOrderArc> cmdSaleOrderArcs = new HashSet<CmdSaleOrderArc>(
            0);
    private Set<StkStockReserved> stkStockReserveds = new HashSet<StkStockReserved>(
            0);
    private Set<PdtProduct> pdtProducts = new HashSet<PdtProduct>(0);
    private Set<RcpReception> rcpReceptions = new HashSet<RcpReception>(0);
    private Set<CmdSaleOrder> cmdSaleOrders = new HashSet<CmdSaleOrder>(0);
    private Set<StkStockArc> stkStockArcs = new HashSet<StkStockArc>(0);


    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq")
    @SequenceGenerator(name = "seq", sequenceName = "seq_rcp_supplier", allocationSize = 1)
    @Column(name = "rcp_supplierid", unique = true, nullable = false, precision = 10, scale = 0)
    public long getRcpSupplierId() {
        return this.rcpSupplierId;
    }

    public void setRcpSupplierId(long rcpSupplierId) {
        this.rcpSupplierId = rcpSupplierId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "rcp_supplierownerid", nullable = false)
    public OwnOwner getOwnOwner() {
        return this.ownOwner;
    }

    public void setOwnOwner(OwnOwner ownOwner) {
        this.ownOwner = ownOwner;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "rcp_suppliercontactid")
    public PrmContact getPrmContact() {
        return this.prmContact;
    }

    public void setPrmContact(PrmContact prmContact) {
        this.prmContact = prmContact;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "rcp_suppliertransportid")
    public TrpTransport getTrpTransport() {
        return this.trpTransport;
    }

    //TODO
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "rcp_supplieraddressid")
    public AdrAddress getAdrAddress() {
        return adrAddress;
    }

    public void setAdrAddress(AdrAddress adrAddress) {
        this.adrAddress = adrAddress;
    }

    @Column(name = "rcp_supplierisactive", nullable = false)
    public Boolean getRcpSupplierIsActive() {
        return rcpSupplierIsActive;
    }

    public void setRcpSupplierIsActive(Boolean rcpSupplierIsActive) {
        this.rcpSupplierIsActive = rcpSupplierIsActive;
    }

    public void setTrpTransport(TrpTransport trpTransport) {
        this.trpTransport = trpTransport;
    }

    @Column(name = "rcp_suppliercode", nullable = false, length = 30)
    public String getRcpSupplierCode() {
        return this.rcpSupplierCode;
    }

    public void setRcpSupplierCode(String rcpSupplierCode) {
        this.rcpSupplierCode = rcpSupplierCode;
    }

    @Column(name = "rcp_supplierdescription")
    public String getRcpSupplierDescription() {
        return this.rcpSupplierDescription;
    }

    public void setRcpSupplierDescription(String rcpSupplierDescription) {
        this.rcpSupplierDescription = rcpSupplierDescription;
    }

    @Column(name = "rcp_suppliercomment")
    public String getRcpSupplierComment() {
        return this.rcpSupplierComment;
    }

    public void setRcpSupplierComment(String rcpSupplierComment) {
        this.rcpSupplierComment = rcpSupplierComment;
    }

    @Column(name = "rcp_supplierterms")
    public String getRcpSupplierTerms() {
        return this.rcpSupplierTerms;
    }

    public void setRcpSupplierTerms(String rcpSupplierTerms) {
        this.rcpSupplierTerms = rcpSupplierTerms;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "rcp_suppliercreationdate")
    public Date getRcpSupplierCreationDate() {
        return this.rcpSupplierCreationDate;
    }

    public void setRcpSupplierCreationDate(Date rcpSupplierCreationDate) {
        this.rcpSupplierCreationDate = rcpSupplierCreationDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "rcp_supplierupdatedate")
    public Date getRcpSupplierUpdateDate() {
        return this.rcpSupplierUpdateDate;
    }

    public void setRcpSupplierUpdateDate(Date rcpSupplierUpdateDate) {
        this.rcpSupplierUpdateDate = rcpSupplierUpdateDate;
    }

    @Column(name = "rcp_suppliervariable1")
    public String getRcpSupplierVariable1() {
        return this.rcpSupplierVariable1;
    }

    public void setRcpSupplierVariable1(String rcpSupplierVariable1) {
        this.rcpSupplierVariable1 = rcpSupplierVariable1;
    }

    @Column(name = "rcp_suppliervariable2")
    public String getRcpSupplierVariable2() {
        return this.rcpSupplierVariable2;
    }

    public void setRcpSupplierVariable2(String rcpSupplierVariable2) {
        this.rcpSupplierVariable2 = rcpSupplierVariable2;
    }

    @Column(name = "rcp_suppliervariable3")
    public String getRcpSupplierVariable3() {
        return this.rcpSupplierVariable3;
    }

    public void setRcpSupplierVariable3(String rcpSupplierVariable3) {
        this.rcpSupplierVariable3 = rcpSupplierVariable3;
    }

    @Column(name = "rcp_suppliervariable4")
    public String getRcpSupplierVariable4() {
        return this.rcpSupplierVariable4;
    }

    public void setRcpSupplierVariable4(String rcpSupplierVariable4) {
        this.rcpSupplierVariable4 = rcpSupplierVariable4;
    }

    @Column(name = "rcp_suppliervariable5")
    public String getRcpSupplierVariable5() {
        return this.rcpSupplierVariable5;
    }

    public void setRcpSupplierVariable5(String rcpSupplierVariable5) {
        this.rcpSupplierVariable5 = rcpSupplierVariable5;
    }

    @Column(name = "rcp_suppliervariable6")
    public String getRcpSupplierVariable6() {
        return this.rcpSupplierVariable6;
    }

    public void setRcpSupplierVariable6(String rcpSupplierVariable6) {
        this.rcpSupplierVariable6 = rcpSupplierVariable6;
    }

    @Column(name = "rcp_suppliervariable7")
    public String getRcpSupplierVariable7() {
        return this.rcpSupplierVariable7;
    }

    public void setRcpSupplierVariable7(String rcpSupplierVariable7) {
        this.rcpSupplierVariable7 = rcpSupplierVariable7;
    }

    @Column(name = "rcp_suppliervariable8")
    public String getRcpSupplierVariable8() {
        return this.rcpSupplierVariable8;
    }

    public void setRcpSupplierVariable8(String rcpSupplierVariable8) {
        this.rcpSupplierVariable8 = rcpSupplierVariable8;
    }

    @Column(name = "rcp_suppliervariable9")
    public String getRcpSupplierVariable9() {
        return this.rcpSupplierVariable9;
    }

    public void setRcpSupplierVariable9(String rcpSupplierVariable9) {
        this.rcpSupplierVariable9 = rcpSupplierVariable9;
    }

    @Column(name = "rcp_suppliervariable10")
    public String getRcpSupplierVariable10() {
        return this.rcpSupplierVariable10;
    }

    public void setRcpSupplierVariable10(String rcpSupplierVariable10) {
        this.rcpSupplierVariable10 = rcpSupplierVariable10;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "rcpSupplier")
    public Set<StkStock> getStkStocks() {
        return this.stkStocks;
    }

    public void setStkStocks(Set<StkStock> stkStocks) {
        this.stkStocks = stkStocks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "rcpSupplier")
    public Set<RcpReceptionStockArc> getRcpReceptionStockArcs() {
        return this.rcpReceptionStockArcs;
    }

    public void setRcpReceptionStockArcs(
            Set<RcpReceptionStockArc> rcpReceptionStockArcs) {
        this.rcpReceptionStockArcs = rcpReceptionStockArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "rcpSupplier")
    public Set<RcpReceptionStock> getRcpReceptionStocks() {
        return this.rcpReceptionStocks;
    }

    public void setRcpReceptionStocks(Set<RcpReceptionStock> rcpReceptionStocks) {
        this.rcpReceptionStocks = rcpReceptionStocks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "rcpSupplier")
    public Set<RcpReceptionArc> getRcpReceptionArcs() {
        return this.rcpReceptionArcs;
    }

    public void setRcpReceptionArcs(Set<RcpReceptionArc> rcpReceptionArcs) {
        this.rcpReceptionArcs = rcpReceptionArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "rcpSupplier")
    public Set<CmdSaleOrderArc> getCmdSaleOrderArcs() {
        return this.cmdSaleOrderArcs;
    }

    public void setCmdSaleOrderArcs(Set<CmdSaleOrderArc> cmdSaleOrderArcs) {
        this.cmdSaleOrderArcs = cmdSaleOrderArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "rcpSupplier")
    public Set<StkStockReserved> getStkStockReserveds() {
        return this.stkStockReserveds;
    }

    public void setStkStockReserveds(Set<StkStockReserved> stkStockReserveds) {
        this.stkStockReserveds = stkStockReserveds;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "rcpSupplier")
    public Set<PdtProduct> getPdtProducts() {
        return this.pdtProducts;
    }

    public void setPdtProducts(Set<PdtProduct> pdtProducts) {
        this.pdtProducts = pdtProducts;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "rcpSupplier")
    public Set<RcpReception> getRcpReceptions() {
        return this.rcpReceptions;
    }

    public void setRcpReceptions(Set<RcpReception> rcpReceptions) {
        this.rcpReceptions = rcpReceptions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "rcpSupplier")
    public Set<CmdSaleOrder> getCmdSaleOrders() {
        return this.cmdSaleOrders;
    }

    public void setCmdSaleOrders(Set<CmdSaleOrder> cmdSaleOrders) {
        this.cmdSaleOrders = cmdSaleOrders;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "rcpSupplier")
    public Set<StkStockArc> getStkStockArcs() {
        return this.stkStockArcs;
    }

    public void setStkStockArcs(Set<StkStockArc> stkStockArcs) {
        this.stkStockArcs = stkStockArcs;
    }
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name="rcp_supplierinvoicetermid")
    public InvInvoiceTerm getInvInvoiceTerm() {
        return invInvoiceTerm;
    }

    public void setInvInvoiceTerm(InvInvoiceTerm invInvoiceTerm) {
        this.invInvoiceTerm = invInvoiceTerm;
    }

    @Override
    public boolean equals(Object object) {
        boolean result = false;
        if (object == null || object.getClass() != getClass()) {
            result = false;
        } else {
            RcpSupplier obj = (RcpSupplier) object;
            if (this.getRcpSupplierId() == obj.getRcpSupplierId()) {
                result = true;
            }
        }
        return result;
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 7 * hash + (int) this.getRcpSupplierId();
        hash = 7 * hash + (int) this.getRcpSupplierId();
        return hash;
    }
}
