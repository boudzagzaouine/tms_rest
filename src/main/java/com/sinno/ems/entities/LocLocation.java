package com.sinno.ems.entities;

// Generated 8 mars 2015 01:55:29 by Hibernate Tools 4.3.1

import org.springframework.format.annotation.DateTimeFormat;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * LocLocation generated by hbm2java
 */
@Entity
@Table(name = "loc_location", uniqueConstraints = {
        @UniqueConstraint(columnNames = "loc_locationcode")})
public class LocLocation implements Serializable {

    private static final long serialVersionUID = 5020328395529036536L;

    private long locLocationId;

    private LocZone locZone;
    @NotNull
    private WrhWarehouse wrhWarehouse;
    @Size(max = 30)
    @NotNull
    private String locLocationCode;
    @NotNull
    private Boolean locLocationIsActive;
    @DateTimeFormat(pattern = "yyyy-MM-dd")

    private Date locLocationCreationDate;
    @DateTimeFormat(pattern = "yyyy-MM-dd")

    private Boolean locLocationPicking;
    private Boolean locLocationReserve;
    private PrmLocationStatus prmLocationStatus;
    private PrmOrderStatus prmOrderStatus;
    private Boolean locLocationDefaultLocation;
    private Long locLocationWmsId;


    private Date locLocationUpdateDate;
    private Set<RcpReceptionLineArc> rcpReceptionLineArcs = new HashSet<RcpReceptionLineArc>(
            0);
    private Set<RcpPurshaseOrderLine> rcpPurshaseOrderLines = new HashSet<RcpPurshaseOrderLine>(
            0);
    private Set<CmdSaleOrderStock> cmdSaleOrderStocks = new HashSet<CmdSaleOrderStock>(
            0);
    private Set<CmdSaleOrderLine> cmdSaleOrderLines = new HashSet<CmdSaleOrderLine>(
            0);
    private Set<StkContainer> stkContainers = new HashSet<StkContainer>(0);
    private Set<StkContainerArc> stkContainerArcs = new HashSet<StkContainerArc>(
            0);
    private Set<RcpReceptionLine> rcpReceptionLines = new HashSet<RcpReceptionLine>(
            0);
    private Set<CmdSaleOrderLineArc> cmdSaleOrderLineArcs = new HashSet<CmdSaleOrderLineArc>(
            0);
    private Set<CmdSaleOrderStockArc> cmdSaleOrderStockArcs = new HashSet<CmdSaleOrderStockArc>(
            0);
    private Set<PdtProduct> pdtProducts = new HashSet<PdtProduct>(0);
    private Set<RcpPurshaseOrderLineArc> rcpPurshaseOrderLineArcs = new HashSet<RcpPurshaseOrderLineArc>(
            0);
    private Set<StkStock> stkStocks = new HashSet<StkStock>(0);
    private Set<StkStockArc> stkStockArcs = new HashSet<StkStockArc>(0);

    public LocLocation() {
    }

    public LocLocation(long locLocationId, LocZone locZone,
                       WrhWarehouse wrhWarehouse, String locLocationCode,
                       Boolean locLocationIsActive) {
        this.locLocationId = locLocationId;
        this.locZone = locZone;
        this.wrhWarehouse = wrhWarehouse;
        this.locLocationCode = locLocationCode;
        this.locLocationIsActive = locLocationIsActive;
    }

    public LocLocation(long locLocationId, LocZone locZone,
                       WrhWarehouse wrhWarehouse, String locLocationCode,
                       Boolean locLocationIsActive, Date locLocationCreationDate,
                       Date locLocationUpdateDate,
                       Set<RcpReceptionLineArc> rcpReceptionLineArcs,
                       Set<RcpPurshaseOrderLine> rcpPurshaseOrderLines,
                       Set<CmdSaleOrderStock> cmdSaleOrderStocks,
                       Set<CmdSaleOrderLine> cmdSaleOrderLines,
                       Set<StkContainer> stkContainers,
                       Set<StkContainerArc> stkContainerArcs,
                       Set<RcpReceptionLine> rcpReceptionLines,
                       Set<CmdSaleOrderLineArc> cmdSaleOrderLineArcs,
                       Set<CmdSaleOrderStockArc> cmdSaleOrderStockArcs,
                       Set<PdtProduct> pdtProducts,
                       Set<RcpPurshaseOrderLineArc> rcpPurshaseOrderLineArcs,
                       Set<StkStock> stkStocks, Set<StkStockArc> stkStockArcs) {
        this.locLocationId = locLocationId;
        this.locZone = locZone;
        this.wrhWarehouse = wrhWarehouse;
        this.locLocationCode = locLocationCode;
        this.locLocationIsActive = locLocationIsActive;
        this.locLocationCreationDate = locLocationCreationDate;
        this.locLocationUpdateDate = locLocationUpdateDate;
        this.rcpReceptionLineArcs = rcpReceptionLineArcs;
        this.rcpPurshaseOrderLines = rcpPurshaseOrderLines;
        this.cmdSaleOrderStocks = cmdSaleOrderStocks;
        this.cmdSaleOrderLines = cmdSaleOrderLines;
        this.stkContainers = stkContainers;
        this.stkContainerArcs = stkContainerArcs;
        this.rcpReceptionLines = rcpReceptionLines;
        this.cmdSaleOrderLineArcs = cmdSaleOrderLineArcs;
        this.cmdSaleOrderStockArcs = cmdSaleOrderStockArcs;
        this.pdtProducts = pdtProducts;
        this.rcpPurshaseOrderLineArcs = rcpPurshaseOrderLineArcs;
        this.stkStocks = stkStocks;
        this.stkStockArcs = stkStockArcs;
    }


    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq")
    @SequenceGenerator(name = "seq", sequenceName = "seq_loc_location", allocationSize = 1)
    @Column(name = "loc_locationid", unique = true, nullable = false, precision = 10, scale = 0)
    public long getLocLocationId() {
        return this.locLocationId;
    }


    public void setLocLocationId(long locLocationId) {
        this.locLocationId = locLocationId;
    }

    @Column(name = "loc_locationpicking")
    public Boolean getLocLocationPicking() {
        return locLocationPicking;
    }

    public void setLocLocationPicking(Boolean locLocationPicking) {
        this.locLocationPicking = locLocationPicking;
    }

    @Column(name = "loc_locationreserve")
    public Boolean getLocLocationReserve() {
        return locLocationReserve;
    }

    public void setLocLocationReserve(Boolean locLocationReserve) {
        this.locLocationReserve = locLocationReserve;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "loc_locationzoneid")
    public LocZone getLocZone() {
        return this.locZone;
    }

    public void setLocZone(LocZone locZone) {
        this.locZone = locZone;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "loc_locationwarehouseid")
    public WrhWarehouse getWrhWarehouse() {
        return this.wrhWarehouse;
    }

    public void setWrhWarehouse(WrhWarehouse wrhWarehouse) {
        this.wrhWarehouse = wrhWarehouse;
    }

    @Column(name = "loc_locationcode", unique = true, nullable = false, length = 30)
    public String getLocLocationCode() {
        return this.locLocationCode;
    }

    public void setLocLocationCode(String locLocationCode) {
        this.locLocationCode = locLocationCode;
    }

    public void setLocLocationIsActive(Boolean locLocationIsActive) {
        this.locLocationIsActive = locLocationIsActive;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "loc_locationcreationdate")
    public Date getLocLocationCreationDate() {
        return this.locLocationCreationDate;
    }

    public void setLocLocationCreationDate(Date locLocationCreationDate) {
        this.locLocationCreationDate = locLocationCreationDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "loc_locationupdatedate")
    public Date getLocLocationUpdateDate() {
        return this.locLocationUpdateDate;
    }

    public void setLocLocationUpdateDate(Date locLocationUpdateDate) {
        this.locLocationUpdateDate = locLocationUpdateDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<RcpReceptionLineArc> getRcpReceptionLineArcs() {
        return this.rcpReceptionLineArcs;
    }

    public void setRcpReceptionLineArcs(
            Set<RcpReceptionLineArc> rcpReceptionLineArcs) {
        this.rcpReceptionLineArcs = rcpReceptionLineArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<RcpPurshaseOrderLine> getRcpPurshaseOrderLines() {
        return this.rcpPurshaseOrderLines;
    }

    public void setRcpPurshaseOrderLines(
            Set<RcpPurshaseOrderLine> rcpPurshaseOrderLines) {
        this.rcpPurshaseOrderLines = rcpPurshaseOrderLines;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<CmdSaleOrderStock> getCmdSaleOrderStocks() {
        return this.cmdSaleOrderStocks;
    }

    public void setCmdSaleOrderStocks(Set<CmdSaleOrderStock> cmdSaleOrderStocks) {
        this.cmdSaleOrderStocks = cmdSaleOrderStocks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<CmdSaleOrderLine> getCmdSaleOrderLines() {
        return this.cmdSaleOrderLines;
    }

    public void setCmdSaleOrderLines(Set<CmdSaleOrderLine> cmdSaleOrderLines) {
        this.cmdSaleOrderLines = cmdSaleOrderLines;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<StkContainer> getStkContainers() {
        return this.stkContainers;
    }

    public void setStkContainers(Set<StkContainer> stkContainers) {
        this.stkContainers = stkContainers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<StkContainerArc> getStkContainerArcs() {
        return this.stkContainerArcs;
    }

    public void setStkContainerArcs(Set<StkContainerArc> stkContainerArcs) {
        this.stkContainerArcs = stkContainerArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<RcpReceptionLine> getRcpReceptionLines() {
        return this.rcpReceptionLines;
    }

    public void setRcpReceptionLines(Set<RcpReceptionLine> rcpReceptionLines) {
        this.rcpReceptionLines = rcpReceptionLines;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<CmdSaleOrderLineArc> getCmdSaleOrderLineArcs() {
        return this.cmdSaleOrderLineArcs;
    }

    public void setCmdSaleOrderLineArcs(
            Set<CmdSaleOrderLineArc> cmdSaleOrderLineArcs) {
        this.cmdSaleOrderLineArcs = cmdSaleOrderLineArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<CmdSaleOrderStockArc> getCmdSaleOrderStockArcs() {
        return this.cmdSaleOrderStockArcs;
    }

    public void setCmdSaleOrderStockArcs(
            Set<CmdSaleOrderStockArc> cmdSaleOrderStockArcs) {
        this.cmdSaleOrderStockArcs = cmdSaleOrderStockArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<PdtProduct> getPdtProducts() {
        return this.pdtProducts;
    }

    public void setPdtProducts(Set<PdtProduct> pdtProducts) {
        this.pdtProducts = pdtProducts;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<RcpPurshaseOrderLineArc> getRcpPurshaseOrderLineArcs() {
        return this.rcpPurshaseOrderLineArcs;
    }

    public void setRcpPurshaseOrderLineArcs(
            Set<RcpPurshaseOrderLineArc> rcpPurshaseOrderLineArcs) {
        this.rcpPurshaseOrderLineArcs = rcpPurshaseOrderLineArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<StkStock> getStkStocks() {
        return this.stkStocks;
    }

    public void setStkStocks(Set<StkStock> stkStocks) {
        this.stkStocks = stkStocks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "locLocation")
    public Set<StkStockArc> getStkStockArcs() {
        return this.stkStockArcs;
    }

    public void setStkStockArcs(Set<StkStockArc> stkStockArcs) {
        this.stkStockArcs = stkStockArcs;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "loc_locationlocationstatusid")
    public PrmLocationStatus getPrmLocationStatus() {
        return prmLocationStatus;
    }

    public void setPrmLocationStatus(PrmLocationStatus prmLocationStatus) {
        this.prmLocationStatus = prmLocationStatus;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "loc_locationorderstatusid")
    public PrmOrderStatus getPrmOrderStatus() {
        return prmOrderStatus;
    }

    public void setPrmOrderStatus(PrmOrderStatus prmOrderStatus) {
        this.prmOrderStatus = prmOrderStatus;
    }
    @Column(name="loc_locationisactive",nullable = false)
    public Boolean getLocLocationIsActive() {
        return locLocationIsActive;
    }

    @Column(name="loc_locationdefault")

    public Boolean getLocLocationDefaultLocation() {
        return locLocationDefaultLocation;
    }

    public void setLocLocationDefaultLocation(Boolean locLocationDefaultLocation) {
        this.locLocationDefaultLocation = locLocationDefaultLocation;
    }
    @Column(name="loc_locationwmsid")

    public Long getLocLocationWmsId() {
        return locLocationWmsId;
    }

    public void setLocLocationWmsId(Long locLocationWmsId) {
        this.locLocationWmsId = locLocationWmsId;
    }


    @Override
    public boolean equals(Object object) {
        boolean result = false;
        if (object == null || object.getClass() != getClass()) {
            result = false;
        } else {
            LocLocation obj = (LocLocation) object;
            if (this.getLocLocationId() == obj.getLocLocationId()) {
                result = true;
            }
        }
        return result;
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 7 * hash + (int) this.getLocLocationId();
        hash = 7 * hash + (int) this.getLocLocationId();
        return hash;
    }
}
