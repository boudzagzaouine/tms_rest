package com.sinno.ems.entities;

// Generated 8 mars 2015 01:55:29 by Hibernate Tools 4.3.1

import org.springframework.format.annotation.DateTimeFormat;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * WrhWarehouse generated by hbm2java
 */
@Entity
@Table(name = "wrh_warehouse", uniqueConstraints = @UniqueConstraint(columnNames = "wrh_warehousecode"))
public class WrhWarehouse implements java.io.Serializable {

    private long wrhWarehouseId;
    @NotNull
    private AdrAddress adrAddress;
    @Size(max = 30)
    @NotNull
    private String wrhWarehouseCode;
    @Size(max = 255)
    private String wrhWarehouseDescription;
    @DateTimeFormat(pattern = "yyyy-MM-dd")
    private Date wrhWarehouseCreationDate;
    @DateTimeFormat(pattern = "yyyy-MM-dd")

    private Date wrhWarehouseUpdateDate;
    private Set<PdtProduct> pdtProducts = new HashSet<PdtProduct>(0);
    private Set<CmdSaleOrderLine> cmdSaleOrderLines = new HashSet<CmdSaleOrderLine>(
            0);
    private Set<CmdSaleOrderStockArc> cmdSaleOrderStockArcs = new HashSet<CmdSaleOrderStockArc>(
            0);
    private Set<StkStockReserved> stkStockReserveds = new HashSet<StkStockReserved>(
            0);
    private Set<CmdSaleOrderLineArc> cmdSaleOrderLineArcs = new HashSet<CmdSaleOrderLineArc>(
            0);
    private Set<RcpReceptionLine> rcpReceptionLines = new HashSet<RcpReceptionLine>(
            0);
    private Set<RcpPurshaseOrderLine> rcpPurshaseOrderLines = new HashSet<RcpPurshaseOrderLine>(
            0);
    private Set<RcpReceptionStock> rcpReceptionStocks = new HashSet<RcpReceptionStock>(
            0);
    private Set<LocLocation> locLocations = new HashSet<LocLocation>(0);
    private Set<PdtProduct> pdtProducts_1 = new HashSet<PdtProduct>(0);
    private Set<CmdSaleOrder> cmdSaleOrders = new HashSet<CmdSaleOrder>(0);
    private Set<CmdSaleOrderStock> cmdSaleOrderStocks = new HashSet<CmdSaleOrderStock>(
            0);
    private Set<RcpReceptionLineArc> rcpReceptionLineArcs = new HashSet<RcpReceptionLineArc>(
            0);
    private Set<RcpReceptionStockArc> rcpReceptionStockArcs = new HashSet<RcpReceptionStockArc>(
            0);
    private Set<StkContainer> stkContainers = new HashSet<StkContainer>(0);
    private Set<StkStockArc> stkStockArcs = new HashSet<StkStockArc>(0);
    private Set<CmdSaleOrderArc> cmdSaleOrderArcs = new HashSet<CmdSaleOrderArc>(
            0);
    //private Set<StkStock> stkStocks = new HashSet<StkStock>(0);
    private Set<LocAisle> locAisles = new HashSet<LocAisle>(0);
    private Set<RcpPurshaseOrderLineArc> rcpPurshaseOrderLineArcs = new HashSet<RcpPurshaseOrderLineArc>(
            0);
    private Set<StkContainerArc> stkContainerArcs = new HashSet<StkContainerArc>(
            0);
    private Set<LocZoneWarehouse> locZoneWarehouses;
    //TODO ssks
    @NotNull
    @Size(max = 100)
    private String wrhWarehouseEmail;
    @Size(max = 20)
    private String wrhWarehouseTel;
    @NotNull
    private Boolean wrhWarehouseIsActive;


    @Column(name = "wrh_warehouseemail", nullable = false, length = 100)
    public String getWrhWarehouseEmail() {
        return wrhWarehouseEmail;
    }

    public void setWrhWarehouseEmail(String wrhWarehouseEmail) {
        this.wrhWarehouseEmail = wrhWarehouseEmail;
    }

    @Column(name = "wrh_warehousetel", length = 20)
    public String getWrhWarehouseTel() {
        return wrhWarehouseTel;
    }

    public void setWrhWarehouseTel(String wrhWarehouseTel) {
        this.wrhWarehouseTel = wrhWarehouseTel;
    }

    @Column(name = "wrh_warehouseisactif", nullable = false)
    public Boolean getWrhWarehouseIsActive() {
        return wrhWarehouseIsActive;
    }

    public void setWrhWarehouseIsActive(Boolean wrhWarehouseIsActive) {
        this.wrhWarehouseIsActive = wrhWarehouseIsActive;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq")
    @SequenceGenerator(name = "seq", sequenceName = "seq_wrh_warehouse", allocationSize = 1)
    @Column(name = "wrh_warehouseid", unique = true, nullable = false, precision = 10, scale = 0)
    public long getWrhWarehouseId() {
        return this.wrhWarehouseId;
    }

    public void setWrhWarehouseId(long wrhWarehouseId) {
        this.wrhWarehouseId = wrhWarehouseId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "wrh_warehouseaddressid", nullable = false)
    public AdrAddress getAdrAddress() {
        return this.adrAddress;
    }

    public void setAdrAddress(AdrAddress adrAddress) {
        this.adrAddress = adrAddress;
    }

    @Column(name = "wrh_warehousecode", unique = true, nullable = false, length = 30)
    public String getWrhWarehouseCode() {
        return this.wrhWarehouseCode;
    }

    public void setWrhWarehouseCode(String wrhWarehouseCode) {
        this.wrhWarehouseCode = wrhWarehouseCode;
    }

    @Column(name = "wrh_warehousedescription")
    public String getWrhWarehouseDescription() {
        return this.wrhWarehouseDescription;
    }

    public void setWrhWarehouseDescription(String wrhWarehouseDescription) {
        this.wrhWarehouseDescription = wrhWarehouseDescription;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "wrh_warehousecreationdate")
    public Date getWrhWarehouseCreationDate() {
        return this.wrhWarehouseCreationDate;
    }

    public void setWrhWarehouseCreationDate(Date wrhWarehouseCreationDate) {
        this.wrhWarehouseCreationDate = wrhWarehouseCreationDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "wrh_warehouseupdatedate")
    public Date getWrhWarehouseUpdateDate() {
        return this.wrhWarehouseUpdateDate;
    }

    public void setWrhWarehouseUpdateDate(Date wrhWarehouseUpdateDate) {
        this.wrhWarehouseUpdateDate = wrhWarehouseUpdateDate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<PdtProduct> getPdtProducts() {
        return this.pdtProducts;
    }

    public void setPdtProducts(Set<PdtProduct> pdtProducts) {
        this.pdtProducts = pdtProducts;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<CmdSaleOrderLine> getCmdSaleOrderLines() {
        return this.cmdSaleOrderLines;
    }

    public void setCmdSaleOrderLines(Set<CmdSaleOrderLine> cmdSaleOrderLines) {
        this.cmdSaleOrderLines = cmdSaleOrderLines;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<CmdSaleOrderStockArc> getCmdSaleOrderStockArcs() {
        return this.cmdSaleOrderStockArcs;
    }

    public void setCmdSaleOrderStockArcs(
            Set<CmdSaleOrderStockArc> cmdSaleOrderStockArcs) {
        this.cmdSaleOrderStockArcs = cmdSaleOrderStockArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<StkStockReserved> getStkStockReserveds() {
        return this.stkStockReserveds;
    }

    public void setStkStockReserveds(Set<StkStockReserved> stkStockReserveds) {
        this.stkStockReserveds = stkStockReserveds;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<CmdSaleOrderLineArc> getCmdSaleOrderLineArcs() {
        return this.cmdSaleOrderLineArcs;
    }

    public void setCmdSaleOrderLineArcs(
            Set<CmdSaleOrderLineArc> cmdSaleOrderLineArcs) {
        this.cmdSaleOrderLineArcs = cmdSaleOrderLineArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<RcpReceptionLine> getRcpReceptionLines() {
        return this.rcpReceptionLines;
    }

    public void setRcpReceptionLines(Set<RcpReceptionLine> rcpReceptionLines) {
        this.rcpReceptionLines = rcpReceptionLines;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<RcpPurshaseOrderLine> getRcpPurshaseOrderLines() {
        return this.rcpPurshaseOrderLines;
    }

    public void setRcpPurshaseOrderLines(
            Set<RcpPurshaseOrderLine> rcpPurshaseOrderLines) {
        this.rcpPurshaseOrderLines = rcpPurshaseOrderLines;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<RcpReceptionStock> getRcpReceptionStocks() {
        return this.rcpReceptionStocks;
    }

    public void setRcpReceptionStocks(Set<RcpReceptionStock> rcpReceptionStocks) {
        this.rcpReceptionStocks = rcpReceptionStocks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<LocLocation> getLocLocations() {
        return this.locLocations;
    }

    public void setLocLocations(Set<LocLocation> locLocations) {
        this.locLocations = locLocations;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<PdtProduct> getPdtProducts_1() {
        return this.pdtProducts_1;
    }

    public void setPdtProducts_1(Set<PdtProduct> pdtProducts_1) {
        this.pdtProducts_1 = pdtProducts_1;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouseSource")
    public Set<CmdSaleOrder> getCmdSaleOrders() {
        return this.cmdSaleOrders;
    }

    public void setCmdSaleOrders(Set<CmdSaleOrder> cmdSaleOrders) {
        this.cmdSaleOrders = cmdSaleOrders;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<CmdSaleOrderStock> getCmdSaleOrderStocks() {
        return this.cmdSaleOrderStocks;
    }

    public void setCmdSaleOrderStocks(Set<CmdSaleOrderStock> cmdSaleOrderStocks) {
        this.cmdSaleOrderStocks = cmdSaleOrderStocks;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<RcpReceptionLineArc> getRcpReceptionLineArcs() {
        return this.rcpReceptionLineArcs;
    }

    public void setRcpReceptionLineArcs(
            Set<RcpReceptionLineArc> rcpReceptionLineArcs) {
        this.rcpReceptionLineArcs = rcpReceptionLineArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<RcpReceptionStockArc> getRcpReceptionStockArcs() {
        return this.rcpReceptionStockArcs;
    }

    public void setRcpReceptionStockArcs(
            Set<RcpReceptionStockArc> rcpReceptionStockArcs) {
        this.rcpReceptionStockArcs = rcpReceptionStockArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<StkContainer> getStkContainers() {
        return this.stkContainers;
    }

    public void setStkContainers(Set<StkContainer> stkContainers) {
        this.stkContainers = stkContainers;
    }
/*
    public Set<StkStockArc> getStkStockArcs() {
        return this.stkStockArcs;
    }

    public void setStkStockArcs(Set<StkStockArc> stkStockArcs) {
        this.stkStockArcs = stkStockArcs;
    }*/

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouseSource")
    public Set<CmdSaleOrderArc> getCmdSaleOrderArcs() {
        return this.cmdSaleOrderArcs;
    }

    public void setCmdSaleOrderArcs(Set<CmdSaleOrderArc> cmdSaleOrderArcs) {
        this.cmdSaleOrderArcs = cmdSaleOrderArcs;
    }

    /*  @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
      public Set<StkStock> getStkStocks() {
          return this.stkStocks;
      }

      public void setStkStocks(Set<StkStock> stkStocks) {
          this.stkStocks = stkStocks;
      }
  */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<LocAisle> getLocAisles() {
        return this.locAisles;
    }

    public void setLocAisles(Set<LocAisle> locAisles) {
        this.locAisles = locAisles;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<RcpPurshaseOrderLineArc> getRcpPurshaseOrderLineArcs() {
        return this.rcpPurshaseOrderLineArcs;
    }

    public void setRcpPurshaseOrderLineArcs(
            Set<RcpPurshaseOrderLineArc> rcpPurshaseOrderLineArcs) {
        this.rcpPurshaseOrderLineArcs = rcpPurshaseOrderLineArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<StkContainerArc> getStkContainerArcs() {
        return this.stkContainerArcs;
    }

    public void setStkContainerArcs(Set<StkContainerArc> stkContainerArcs) {
        this.stkContainerArcs = stkContainerArcs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "wrhWarehouse")
    public Set<LocZoneWarehouse> getLocZoneWarehouses() {
        return locZoneWarehouses;
    }

    public void setLocZoneWarehouses(Set<LocZoneWarehouse> locZoneWarehouses) {
        this.locZoneWarehouses = locZoneWarehouses;
    }
}
